<!--偶发掉线车辆查询-->
<template>
    <div class="tw-template-wrapper">
        <el-form :inline="true" :model="query" size="small" class="tw-query-bar">
            <el-form-item>
                <el-autocomplete class="inline-input" v-model="query.vehicle" placeholder="车牌号码"
                                 :fetch-suggestions="queryVehicleSearch" :trigger-on-focus="false"></el-autocomplete>
            </el-form-item>
            <el-form-item>
                <el-select v-model="query.area" placeholder="区域">
                    <el-option v-for="item in getRegionReal" :key="item.value" :label="item.label" :value="item.value"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item>
                <el-input v-model="query.count" placeholder="下线次数(整数)"></el-input>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" @click="handleQueryClick">查询</el-button>
                <el-button type="primary" @click="handleExportClick">导出</el-button>
            </el-form-item>
        </el-form>
        <div class="tw-query-panel">
            <el-table :data="table.data" v-loading="table.loading" border size="small" height="calc(100% - 42px)" style="width: 100%; margin-bottom: 10px;">
                <el-table-column type="index" label="序号" width="60" :resizable="false" fixed></el-table-column>
                <el-table-column prop="VEHI_NUM" label="车牌号码" width="140" fixed></el-table-column>
                <el-table-column prop="COMP_NAME" label="所属公司" width="280" show-overflow-tooltip></el-table-column>
                <el-table-column prop="AREA_NAME" label="回场区域" width="240"></el-table-column>
                <!--<el-table-column prop="area" label="下线时长" width="180"></el-table-column>-->
                <el-table-column label="下线时长" width="150">
                    <template slot-scope="scope">
                        <tw-unit :data="scope.row.OFF_DUR" unit="分钟"></tw-unit>
                    </template>
                </el-table-column>
                <el-table-column prop="ETIME" label="下线时间" width="150"></el-table-column>
                <el-table-column prop="OFF_ADDR" label="下线地址" width="150"></el-table-column>
                <el-table-column prop="STIME" label="上线时间" width="180"></el-table-column>
                <el-table-column prop="ON_ADDR" label="上线地址" width="150"></el-table-column>
            </el-table>
            <el-pagination background :page-size="table.pageSize" :current-page="table.currentPage" :total="table.total" layout="prev, pager, next,total" @current-change="handleTablePageCurrentChange"></el-pagination>
        </div>
    </div>
</template>

<script>
    import _ from 'underscore'
    import axios from 'axios'
    import moment from 'moment'
    import {mapGetters} from 'vuex'
    import {formatDateTime} from "../../assets/js/util";
    import TWUnit from "../../components/TWTableColumn/TWUnit";

    export default {
        name: "FailureReturnVehicleOnTime",
        data() {
            return {
                query:{
                    vehicle: '',
                    area: '',
                    count:''
                },
                companyList: [],
                table: {
                    loading: false,
                    data: [],
                    pageSize: 20,
                    currentPage: 1,
                    total: 0
                },
            }
        },
        mounted() {
            this.$nextTick(() => {
                this.getOccasionalDropOffVehicleInquiry();
            });
        },
        computed: {
            ...mapGetters(['getLPNumber', 'getCompanyName','getRegionReal']),
            filterTableList() {
                const {data, pageSize, currentPage} = this.table;
                const pageIndex = currentPage - 1;
                return _.filter(data, (item, index) => {
                    return  index >= pageIndex * pageSize && index < currentPage * pageSize;
                })
            }
        },
        methods: {
            /*接口*/
            queryVehicleSearch(query, cb) {
                if (query.length < 3) cb(null);
                else cb(_.filter(this.getLPNumber, item => item.label.indexOf(query) > -1));
            },
            queryCompanyNameSearch(query, cb) {
                cb(_.filter(this.getCompanyName, item => item.label.indexOf(query) > -1));
            },
            getOccasionalDropOffVehicleInquiry(){
                this.table.loading = true;
                const {vehicle, area, count} = this.query;
                const {currentPage,pageSize} = this.table;
                axios.get('terminal/occasionaldropoffvehicleinquiry', {
                    baseURL: this.baseURL,
                    params: {
                        vehicle,
                        area,
                        count,
                        currentPage,
                        pageSize
                    }
                }).then(res => {
                    console.log(res.data.datas);
                    this.table.data = res.data.datas;
                    this.table.total = res.data.count;
                    this.table.loading = false;
                }).catch(function (error) {
                    console.log(error);
                });
            },
            /*事件*/
            handleQueryClick() {
                this.table.currentPage = 1;
                this.getOccasionalDropOffVehicleInquiry();
            },
            handleExportClick() {
                const {vehicle, area, count} = this.query;
                this.$confirm('是否需要导出?', '提示', {
                    confirmButtonText: '是',
                    cancelButtonText: '否',
                    cancelButtonClass: 'el-button--danger',
                    closeOnClickModal: false,
                    type: 'info',
                    center: true
                }).then(() => {
                    window.open(`${this.baseURL}terminal/occasionaldropoffvehicleinquirydc?vehicle=${vehicle}&area=${area}&count=${count}`);
                }).catch(() => {});
            },
            handleTablePageCurrentChange(index) {
                this.table.currentPage = index;
                this.getOccasionalDropOffVehicleInquiry();
            }
        },
        components: {
            'tw-unit': TWUnit
        }
    }
</script>

<style scoped>

</style>