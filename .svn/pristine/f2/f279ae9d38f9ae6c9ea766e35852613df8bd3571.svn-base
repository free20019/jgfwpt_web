<!--场站流量统计-->
<template>
	<div class="tw-template-wrapper">
		<div class="tw-template-body">
			<el-form :inline="true" :model="query" size="small" class="tw-query-bar">
				<el-form-item>
					<tree-select class="tw-tree-select tw-line" v-model="query.depot" :multiple="true" :options="depotOptions" placeholder="场站"/>
				</el-form-item>
				<el-form-item>
					<el-date-picker v-model="query.stime" type="datetime" placeholder="开始日期"></el-date-picker>
				</el-form-item>
				<el-form-item>
					<el-date-picker v-model="query.etime" type="datetime" placeholder="结束日期"></el-date-picker>
				</el-form-item>
				<el-form-item>
					<el-checkbox v-model="query.type">一分钟无重复</el-checkbox>
				</el-form-item>
				<el-form-item>
					<el-button type="primary" @click="handleQueryClick">查询</el-button>
					<el-button type="primary" @click="handleExportClick">导出</el-button>
				</el-form-item>
			</el-form>
			<div class="tw-query-panel">
				<el-table :data="filterTableList" v-loading="table.loading" border size="small" height="calc(100% - 42px)" style="width: 100%; margin-bottom: 10px;">
					<el-table-column type="index" label="序号" width="60"></el-table-column>
					<el-table-column prop="chzh" label="场站" min-width="280"></el-table-column>
					<el-table-column prop="sjli" label="数据量" width="160"></el-table-column>
				</el-table>
				<el-pagination background :page-size="table.pageSize" :current-page="table.currentPage" :total="table.total" layout="prev, pager, next" @current-change="handleTablePageCurrentChange"></el-pagination>
			</div>
		</div>
		<div class="tw-template-right">
			<v-chart class="vehicleChart" v-loading="table.loading" :options="vehicleChartOptions" ref="vehicleChart"/>
		</div>
	</div>
</template>

<script>
	import _ from 'underscore'
	import axios from 'axios'
	import moment from 'moment'
	import TreeSelect from '@riophae/vue-treeselect'
	import {formatCustomizeDate, formatDateTime} from '../../assets/js/util'

	export default {
		name: "StationTrafficStatistics",
		data() {
			let config = {
				rotate: 90,
				align: 'left',
				verticalAlign: 'middle',
				position: 'insideBottom',
				distance: 15
			};
			let labelOption = {
				normal: {
					show: true,
					position: config.position,
					distance: config.distance,
					align: config.align,
					verticalAlign: config.verticalAlign,
					rotate: config.rotate,
					formatter: '{c}  {name|{a}}',
					fontSize: 16,
					rich: {
						name: {
							textBorderColor: '#fff'
						}
					}
				}
			};
			return {
				query: {
					depot: [],
					stime: '',
					etime: '',
					type: false
				},
				depotOptions: [
					{id: '1', label: '三墩'},
					{id: '2', label: '九堡客运中心'},
					{id: '3', label: '城站火车站'},
					{id: '4', label: '机场'},
					{id: '5', label: '汽车西站'},
					{id: '6', label: '火车东站北通道'},
					{id: '7', label: '火车东站南通道'}
				],
				table: {
					loading: false,
					data: [
						{
							chzh: '三墩',
							sjli: 197
						}
					],
					pageSize: 20,
					currentPage: 1,
					total: 0
				},
				vehicleChartOptions: {
					color: ['#19d4ae', '#5ab1ef', '#fa6e86', '#ffb980', '#0067a6', '#c4b4e4', '#d87a80', '#9cbbff', '#d9d0c7', '#87a997', '#d49ea2', '#5b4947', '#7ba3a8'],
					tooltip: {
						trigger: 'axis',
						axisPointer: {
							type: 'shadow'
						}
					},
					legend: {
						top: 20,
						data: ['数据量']
					},
					toolbox: {},
					grid: [
						{
							top: 60,
							left: 20,
							right: 20,
							bottom: 10,
							containLabel: true
						}
					],
					calculable: true,
					xAxis: [
						{
							type: 'category',
							axisTick: {show: false},
							axisLabel: {
								interval: 0,
								rotate: 30
							},
							data: ['三墩', '九堡客运中心', '城站火车站', '机场', '汽车西站', '火车东站北通道', '火车东站南通道']
						}
					],
					yAxis: [
						{
							type: 'value'
						}
					],
					series: [
						{
							name: '数据量',
							type: 'bar',
							barGap: 0,
							label: labelOption,
							data: [320, 332, 301, 334, 390, 334, 390]
						}
					]
				}
			}
		},
		mounted() {
			this.$nextTick(() => {
				this.query.stime = formatCustomizeDate(moment(), 'YYYY-MM-DD 00:00:00');
				this.query.etime = formatCustomizeDate(moment(), 'YYYY-MM-DD 23:59:59');
				window.onresize = () => {
					this.$refs.vehicleChart.resize();
				}
			});
		},
		computed: {
			filterTableList() {
				const {data, pageSize, currentPage} = this.table;
				const pageIndex = currentPage -1;
				return _.filter(data, (item, index) => {
					return  index >= pageIndex * pageSize && index < currentPage * pageSize;
				})
			}
		},
		methods: {
			/*数据接口*/
			/*事件*/
			handleQueryClick() {
				this.getHostFailure();
			},
			handleAlarmIssuedClick() {},
			handleExportClick() {},
			handleTablePageCurrentChange(index) {
				this.table.currentPage = index;
			}
		},
		components: {
			'tree-select': TreeSelect
		}
	}
</script>

<style lang="scss" scoped>
	.tw-template {
		&-wrapper {
			overflow: hidden;
		}

		&-body {
			width: calc(100% - 200px);
		}

		&-right {
			right: -600px;
			width: 800px;
			background-color: #ffffff;
			transition: box-shadow .5s ease, right .5s ease .2s;
			z-index: 10;

			&:hover {
				right: 0;
				box-shadow: -2px 0 6px #aaaaaa;
			}
		}
	}
	.tw-query {
		&-panel {
			height: calc(100% - 54px);
		}
	}
	.vehicleChart {
		width: 100%;
		height: 100%;
	}
</style>