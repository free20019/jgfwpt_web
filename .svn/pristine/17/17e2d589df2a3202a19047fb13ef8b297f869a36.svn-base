<!--主机故障-->
<template>
	<div class="tw-template-wrapper">
		<el-form :inline="true" :model="query" size="small" class="tw-query-bar">
			<el-form-item>
				<el-autocomplete class="inline-input" v-model="query.lPNumber"
												 :fetch-suggestions="getLPNumberRemoteMethod" :trigger-on-focus="false"
												 @select="handleLPNumberSelect" placeholder="请输入车牌号码"></el-autocomplete>
			</el-form-item>
			<el-form-item>
				<el-date-picker arrow-control type="datetime" v-model="query.time" placeholder="选择时间点"></el-date-picker>
			</el-form-item>
			<el-form-item>
				<tree-select class="tw-tree-select tw-line" v-model="query.faultType" :multiple="true" :options="faultTypeOptions" placeholder="故障类型"/>
			</el-form-item>
			<el-form-item>
				<el-button type="primary" @click="handleQueryClick">查询</el-button>
				<el-button type="primary" @click="handleAlarmIssuedClick">告警下发</el-button>
				<el-button type="primary" @click="handleExportClick">导出</el-button>
			</el-form-item>
		</el-form>
		<div class="tw-query-panel"  v-loading="dataLoading">
			<el-table :data="table.data" v-loading="table.loading" border size="small" height="100%" style="width: 100%">
				<el-table-column type="index" label="序号" width="60"></el-table-column>
				<el-table-column prop="cphm" label="车牌号码" min-width="180"></el-table-column>
				<el-table-column prop="qy" label="企业" width="180"></el-table-column>
				<el-table-column prop="zjwtx" label="主机无通讯" width="180">
					<template slot-scope="scope">
						<fault-review :item="scope.row" :fault="scope.row.zjwtx" :system-fault="scope.row.zjwtxxt" type="主机无通讯" @true-review-click="AuditPass(scope.row,1,1)" @false-review-click=""></fault-review>
					</template>
				</el-table-column>
				<el-table-column prop="dwyc" label="定位异常" width="180">
					<template slot-scope="scope">
						<fault-review :item="scope.row" :fault="scope.row.dwyc" :system-fault="scope.row.dwycxt" type="定位异常"  @true-review-click="AuditPass(scope.row,2,1)" @false-review-click=""></fault-review>
					</template>
				</el-table-column>
				<el-table-column prop="kcyc" label="空车异常" width="180">
					<template slot-scope="scope">
						<fault-review :item="scope.row" :fault="scope.row.kcyc" :system-fault="scope.row.kcycxt" type="空车异常" @true-review-click="AuditPass(scope.row,3,1)" @false-review-click=""></fault-review>
					</template>
				</el-table-column>
				<el-table-column prop="jjbjyc" label="紧急报警异常" width="180">
					<template slot-scope="scope">
						<fault-review :item="scope.row" :fault="scope.row.jjbjyc" :system-fault="scope.row.jjbjycxt" type="紧急报警异常" @true-review-click="AuditPass(scope.row,4,1)" @false-review-click=""></fault-review>
					</template>
				</el-table-column>
				<el-table-column prop="jjqyc" label="计价器异常" width="180">
					<template slot-scope="scope">
						<fault-review :item="scope.row" :fault="scope.row.jjqyc" :system-fault="scope.row.jjqycxt" type="计价器异常" @true-review-click="AuditPass(scope.row,5,1)" @false-review-click=""></fault-review>
					</template>
				</el-table-column>
			</el-table>
		</div>
	</div>
</template>

<script>
	import TreeSelect from '@riophae/vue-treeselect'
	import _ from 'underscore'
	import axios from 'axios'
	import moment from 'moment'
	import FaultReview from '../../components/TableColumn/FaultReview'

	export default {
		name: "HostFailure",
		data() {
			return {
				query: {
					lPNumber: '',
					time: '',
					faultType: []
				},
				vehicle:[],
				lpNumberLoading: false,
				dataLoading:false,
				lpNumberOption: [],
				faultTypeOptions: [
					{id: '1', label: '主机无通讯'},
					{id: '2', label: '定位异常'},
					{id: '3', label: '空重车异常'},
					{id: '4', label: '紧急报警异常'},
					{id: '5', label: '计价器异常'}
				],
				table: {
					loading: false,
					data: [
						{
							cphm: '123',
							qy:'',
							zjwtxxt: 1,
							zjwtx: 0,
							dwycxt: 0,
							dwyc: 0,
							kcycxt: 0,
							kcyc: 0,
							jjbjycxt: 1,
							jjbjyc: 2,
							jjqycxt: 1,
							jjqyc: 1
						},
						{
							cphm: '234',
							qy:'',
							zjwtxxt: 1,
							zjwtx: 1,
							dwycxt: 1,
							dwyc: 1,
							kcycxt: 0,
							kcyc: 0,
							jjbjycxt: 1,
							jjbjyc: 2,
							jjqycxt: 1,
							jjqyc: 1
						},
						{
							cphm: '345',
							qy:'',
							zjwtxxt: 1,
							zjwtx: 2,
							dwycxt: 0,
							dwyc: 0,
							kcycxt: 0,
							kcyc: 0,
							jjbjycxt: 1,
							jjbjyc: 2,
							jjqycxt: 1,
							jjqyc: 1
						}
					]
				}
			}
		},
		mounted: function () {
				this.getVehicle();
				this.handleQueryClick();
				// this.handleQueryClick();
		},
		methods: {
			getVehicle : function(){
				axios.get('/common/vehicle', {
					baseURL: this.baseURL,
					params: {
					}
				}).then(res => {
					console.info(res.data);
					this.vehicle= _.map(res.data, item=> {
						return item.VEHICLE_NO
					}) || [];
				})
				.catch(function (error) {
					console.log(error);
				});
			},
			/*数据接口*/
			getLPNumberRemoteMethod(query, cd) {
				if (query.length < 3) cd(null);
				else {
					setTimeout(() => {
						cd(_.map(_.filter(this.vehicle, item => item.indexOf(query) > -1), item => {
							return {label: item, value: item}
						}))
					}, 200);
				}
			},
			/*事件*/
			handleLPNumberSelect(item) {
				console.info(item)
			},
			handleQueryClick() {
				let times='';
				if(this.query.time!==''&&this.query.time!==null){
					times = new Date(+new Date(this.query.time)+8*3600*1000).toISOString().replace(/T/g,' ').replace(/\.[\d]{3}Z/,'');
				}
				this.dataLoading=true;
				let type = "";
				for (let i = 0; i < this.query.faultType.length; i++) {
					type +=this.query.faultType[i];
				}
				axios.get('/terminal/hostfailure', {
					baseURL: this.baseURL,
					params: {
							lPNumber: this.query.lPNumber,
							time: times,
							faultType: type
					}
				}).then(res => {
					console.info(res.data);
						this.table.data=_.map(res.data, item => {
							return {
								cphm: item.VEHICLE_NO,
								qy: item.COMP_NAME,
								time:item.DB_TIME,
								zjwtxxt: parseInt(item.HOST_NO_COMMUNICATION),
								zjwtx: 2,
								dwycxt: parseInt(item.GPS_INACCURATE)|| parseInt(item.NO_GPS),
								dwyc: parseInt(item.GPS_INACCURATE_SH === "" ? "0" : item.GPS_INACCURATE_SH),
								kcycxt: parseInt(item.EMPTY_HEAVY),
								kcyc: parseInt(item.EMPTY_HEAVY_SH === "" ? "0" : item.EMPTY_HEAVY_SH),
								jjbjycxt:parseInt(item.EMERGENCY_ALARM),
								jjbjyc: 3,
								jjqycxt: parseInt(item.JJQ_ALARM),
								jjqyc: parseInt(item.JJQ_ALARM_SH === "" ? "0" : item.JJQ_ALARM_SH)
							}
						});
					this.dataLoading=false;
				})
				.catch(function (error) {
					console.log(error);
				});
			},
			AuditPass(item,type,sh) {
				console.log("123",item,type,sh)
				axios.get('/terminal/audit', {
					baseURL: this.baseURL,
					params: {
						vehicle: item.cphm,
						time: item.time,
						type:type,
						sh:sh
					}
				}).then(res => {
					if(res.data>0){
						this.$message({message: "审核成功!", type: 'success'});
						this.handleQueryClick();
					}else{
						this.$message.error('审核失败！');
					}
				})
				.catch(function (error) {
					console.log(error);
				});
			},
			handleAlarmIssuedClick() {
			},
			handleExportClick() {
				let times='';
				if(this.query.time!==''&&this.query.time!==null){
					times = new Date(+new Date(this.query.time)+8*3600*1000).toISOString().replace(/T/g,' ').replace(/\.[\d]{3}Z/,'');
				}
				let type = "";
				for (let i = 0; i < this.query.faultType.length; i++) {
					type +=this.query.faultType[i];
				}
				// const {fault, systemFault, type} = this;
				this.$confirm('是否需要导出?', '提示', {
					confirmButtonText: '是',
					cancelButtonText: '否',
					cancelButtonClass: 'el-button--danger',
					closeOnClickModal: false,
					type: 'info',
					center: true
				}).then(() => {
					window.open(this.baseURL+"/terminal/hostfailuredc?lPNumber="+this.query.lPNumber
								+"&time="+times
								+"&faultType="+type
					);
				}).catch(() => {
				});
			}
		},
		components: {
			'tree-select': TreeSelect,
			FaultReview
		}
	}
</script>

<style scoped>
</style>