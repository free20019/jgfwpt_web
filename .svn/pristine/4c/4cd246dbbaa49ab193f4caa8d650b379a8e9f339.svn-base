<template>
	<div class="tw-template-wrapper">
		<el-form :inline="true" :model="query" size="small" class="tw-query-bar">
			<el-form-item>
				<el-autocomplete class="inline-input" v-model="query.vehicle" placeholder="车牌号码"
												 :fetch-suggestions="queryVehicleSearch" :trigger-on-focus="false"></el-autocomplete>
			</el-form-item>
			<!--<el-form-item>
				<el-input v-model="query.accountNumber" placeholder="账号"></el-input>
			</el-form-item>
			<el-form-item>
				<el-date-picker v-model="query.stime" type="datetime" placeholder="开始日期"></el-date-picker>
			</el-form-item>
			<el-form-item>
				<el-date-picker v-model="query.etime" type="datetime" placeholder="结束日期"></el-date-picker>
			</el-form-item>-->
			<el-form-item>
				<el-button type="primary" @click="handleQueryClick">查询</el-button>
			</el-form-item>
		</el-form>
		<div class="tw-query-panel">
			<el-table :data="filterTableList" v-loading="table.loading" border size="small" height="calc(100% - 42px)" style="width: 100%; margin-bottom: 10px;">
				<el-table-column prop="REAL_NAME" label="车牌号码" min-width="140"></el-table-column>
				<el-table-column prop="road1" label="1路" width="140"></el-table-column>
				<el-table-column prop="road2" label="2路" width="140"></el-table-column>
				<el-table-column prop="road3" label="3路" width="140"></el-table-column>
				<el-table-column prop="road4" label="4路" width="140"></el-table-column>
				<el-table-column label="1路" width="140">
					<template slot-scope="scope">
						<el-radio-group v-model="scope.row.road_e1">
							<el-radio :label="1">是</el-radio>
							<el-radio :label="2">否</el-radio>
						</el-radio-group>
					</template>
				</el-table-column>
				<el-table-column label="2路" width="140">
					<template slot-scope="scope">
						<el-radio-group v-model="scope.row.road_e2">
							<el-radio :label="1">是</el-radio>
							<el-radio :label="2">否</el-radio>
						</el-radio-group>
					</template>
				</el-table-column>
				<el-table-column label="3路" width="140">
					<template slot-scope="scope">
						<el-radio-group v-model="scope.row.road_e3">
							<el-radio :label="1">是</el-radio>
							<el-radio :label="2">否</el-radio>
						</el-radio-group>
					</template>
				</el-table-column>
				<el-table-column label="4路" width="140">
					<template slot-scope="scope">
						<el-radio-group v-model="scope.row.road_e4">
							<el-radio :label="1">是</el-radio>
							<el-radio :label="2">否</el-radio>
						</el-radio-group>
					</template>
				</el-table-column>
				<el-table-column prop="time" label="巡查时间" width="140"></el-table-column>
				<el-table-column label="操作" width="140">
					<template slot-scope="scope">
						<el-button class="tw-table-button" type="text" icon="iconfont icon-save" @click="handleTableSaveClick"></el-button>
					</template>
				</el-table-column>
			</el-table>
			<el-pagination background :page-size="table.pageSize" :current-page="table.currentPage" :total="table.total" layout="prev, pager, next, total" @current-change="handleTablePageCurrentChange"></el-pagination>
		</div>
	</div>
</template>

<script>
	import _ from 'underscore'
	import axios from 'axios'
	import moment from 'moment'
	import {mapGetters} from 'vuex'

	export default {
		name: "VideoShift",
		data() {
			return {
				query:{
					vehicle: ''
				},
				table: {
					loading: false,
					data: [{}],
					pageSize: 20,
					currentPage: 1,
					total: 0
				}
			}
		},
		mounted() {
			this.$nextTick(() => {
				this.query.stime = moment().format('YYYY-MM-DD 00:00:00');
				this.query.etime = moment().format('YYYY-MM-DD 23:59:59');
				this.getCompany();
				this.getEnterpriseSubCenterQuery();
			});
		},
		computed: {
			...mapGetters(["getLPNumber"]),
			filterTableList() {
				const {data, pageSize, currentPage} = this.table;
				const pageIndex = currentPage - 1;
				return _.filter(data, (item, index) => {
					return  index >= pageIndex * pageSize && index < currentPage * pageSize;
				})
			}
		},
		methods: {
			/*接口*/
			queryVehicleSearch(query, cb) {
				cb(_.filter(this.getLPNumber, item => item.label.indexOf(query) > -1));
			},
			/*事件*/
			handleQueryClick() {},
			handleTableSaveClick() {},
			handleTablePageCurrentChange(index) {
				this.table.currentPage = index;
			}
		}
	}
</script>

<style scoped>

</style>